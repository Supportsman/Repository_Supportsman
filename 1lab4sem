using System;
using System.Collections.Generic;
using System.Windows;
using System.Windows.Input;
using System.Windows.Media;

namespace Lab1_WindowEvents
{
    public partial class MainWindow : Window
    {
        private List<SolidColorBrush> _backgroundColors;
        private int _currentColorIndex = 0;
        private WindowState _currentWindowState = WindowState.Normal;

        public MainWindow()
        {
            this.MaxWidth = 1000;
            this.Width = 800;
            this.MinWidth = 600;

            this.MaxHeight = 800;
            this.Height = 600;
            this.MinHeight = 400;

            this.Title = "Погирейчик А.А. Лаб 1";



            InitializeComponent();

            // Инициализация списка цветов
            _backgroundColors = new List<SolidColorBrush>
            {
                Brushes.LightBlue,
                Brushes.LightCoral,
                Brushes.LightGreen,
                Brushes.LightSalmon,
                Brushes.LightSeaGreen,
                Brushes.LightSkyBlue,
                Brushes.LightSteelBlue
            };

            // Установка начального цвета фона
            Background = _backgroundColors[0];
        }

        private void Window_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
        {
            // Смена цвета фона по списку
            _currentColorIndex = (_currentColorIndex + 1) % _backgroundColors.Count;
            Background = _backgroundColors[_currentColorIndex];
        }

        private void Window_MouseRightButtonDown(object sender, MouseButtonEventArgs e)
        {
            // Смена WindowState (нормальное/развернутое)
            if (_currentWindowState == WindowState.Normal)
            {
                WindowState = WindowState.Maximized;
                _currentWindowState = WindowState.Maximized;
            }
            else
            {
                WindowState = WindowState.Normal;
                _currentWindowState = WindowState.Normal;
            }
        }

        private void Window_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.Key == Key.Space)
            {
                // Зеркальное изменение размера окна
                MirrorWindowSize();
            }
            else if (e.Key == Key.Escape)
            {
                Close();
            }
        }

        private void MirrorWindowSize()
        {
            // 1) Вычисление центра диапазона

            double center_height = this.MinHeight + ((this.MaxHeight - this.MinHeight) / 2);
            double center_width = this.MinWidth + ((this.MaxWidth - this.MinWidth) / 2);

            // 2) текущее - центр = дельта

            double delta_height = this.Height - center_height;
            double delta_width = this.Width - center_width;


            // 3) центр - дельта = нужное число

            this.Width = center_width - delta_width;
            this.Height = center_height - delta_height;


        }

    }
}





<Window x:Class="Lab1_WindowEvents.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Lab1_WindowEvents"
        mc:Ignorable="d"
        
        Height="600" Width="800"
        MaxHeight="800" MaxWidth="1000"
        MinHeight="400" MinWidth="600"
        KeyDown="Window_KeyDown"
        MouseLeftButtonDown="Window_MouseLeftButtonDown"
        MouseRightButtonDown="Window_MouseRightButtonDown">
    <Grid>
    </Grid>
</Window>
